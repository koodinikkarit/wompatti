// Code generated by protoc-gen-go.
// source: keijo_service.proto
// DO NOT EDIT!

/*
Package KeijoService is a generated protocol buffer package.

It is generated from these files:
	keijo_service.proto

It has these top-level messages:
	TurnOnRequest
	TurnOnResponse
	TurnOffRequest
	TurnOffResponse
	ChangeSourceRequest
	ChangeSourceResponse
*/
package KeijoService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Devices int32

const (
	Devices_TV           Devices = 0
	Devices_RECORDING1   Devices = 1
	Devices_RECORDING2   Devices = 2
	Devices_TUNER1       Devices = 3
	Devices_PLAYBACK1    Devices = 4
	Devices_AUDIO_SYSTEM Devices = 5
	Devices_TUNER2       Devices = 6
	Devices_TUNER3       Devices = 7
	Devices_PLAYBACK2    Devices = 8
	Devices_PLAYBACK3    Devices = 9
	Devices_TUNER4       Devices = 10
	Devices_PLAYBACK4    Devices = 11
	Devices_RESERVEDC    Devices = 12
	Devices_RESERVEDD    Devices = 13
	Devices_RESERVEDE    Devices = 14
	Devices_BROADCAST    Devices = 15
)

var Devices_name = map[int32]string{
	0:  "TV",
	1:  "RECORDING1",
	2:  "RECORDING2",
	3:  "TUNER1",
	4:  "PLAYBACK1",
	5:  "AUDIO_SYSTEM",
	6:  "TUNER2",
	7:  "TUNER3",
	8:  "PLAYBACK2",
	9:  "PLAYBACK3",
	10: "TUNER4",
	11: "PLAYBACK4",
	12: "RESERVEDC",
	13: "RESERVEDD",
	14: "RESERVEDE",
	15: "BROADCAST",
}
var Devices_value = map[string]int32{
	"TV":           0,
	"RECORDING1":   1,
	"RECORDING2":   2,
	"TUNER1":       3,
	"PLAYBACK1":    4,
	"AUDIO_SYSTEM": 5,
	"TUNER2":       6,
	"TUNER3":       7,
	"PLAYBACK2":    8,
	"PLAYBACK3":    9,
	"TUNER4":       10,
	"PLAYBACK4":    11,
	"RESERVEDC":    12,
	"RESERVEDD":    13,
	"RESERVEDE":    14,
	"BROADCAST":    15,
}

func (x Devices) String() string {
	return proto.EnumName(Devices_name, int32(x))
}
func (Devices) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TurnOnRequest struct {
	Address uint32 `protobuf:"varint,1,opt,name=address" json:"address,omitempty"`
}

func (m *TurnOnRequest) Reset()                    { *m = TurnOnRequest{} }
func (m *TurnOnRequest) String() string            { return proto.CompactTextString(m) }
func (*TurnOnRequest) ProtoMessage()               {}
func (*TurnOnRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TurnOnRequest) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

type TurnOnResponse struct {
}

func (m *TurnOnResponse) Reset()                    { *m = TurnOnResponse{} }
func (m *TurnOnResponse) String() string            { return proto.CompactTextString(m) }
func (*TurnOnResponse) ProtoMessage()               {}
func (*TurnOnResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type TurnOffRequest struct {
	Address uint32 `protobuf:"varint,2,opt,name=address" json:"address,omitempty"`
}

func (m *TurnOffRequest) Reset()                    { *m = TurnOffRequest{} }
func (m *TurnOffRequest) String() string            { return proto.CompactTextString(m) }
func (*TurnOffRequest) ProtoMessage()               {}
func (*TurnOffRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TurnOffRequest) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

type TurnOffResponse struct {
}

func (m *TurnOffResponse) Reset()                    { *m = TurnOffResponse{} }
func (m *TurnOffResponse) String() string            { return proto.CompactTextString(m) }
func (*TurnOffResponse) ProtoMessage()               {}
func (*TurnOffResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ChangeSourceRequest struct {
	Source       Devices `protobuf:"varint,1,opt,name=source,enum=KeijoService.Devices" json:"source,omitempty"`
	Destination  Devices `protobuf:"varint,2,opt,name=destination,enum=KeijoService.Devices" json:"destination,omitempty"`
	SourceNumber uint32  `protobuf:"varint,3,opt,name=sourceNumber" json:"sourceNumber,omitempty"`
}

func (m *ChangeSourceRequest) Reset()                    { *m = ChangeSourceRequest{} }
func (m *ChangeSourceRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeSourceRequest) ProtoMessage()               {}
func (*ChangeSourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ChangeSourceRequest) GetSource() Devices {
	if m != nil {
		return m.Source
	}
	return Devices_TV
}

func (m *ChangeSourceRequest) GetDestination() Devices {
	if m != nil {
		return m.Destination
	}
	return Devices_TV
}

func (m *ChangeSourceRequest) GetSourceNumber() uint32 {
	if m != nil {
		return m.SourceNumber
	}
	return 0
}

type ChangeSourceResponse struct {
}

func (m *ChangeSourceResponse) Reset()                    { *m = ChangeSourceResponse{} }
func (m *ChangeSourceResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangeSourceResponse) ProtoMessage()               {}
func (*ChangeSourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*TurnOnRequest)(nil), "KeijoService.TurnOnRequest")
	proto.RegisterType((*TurnOnResponse)(nil), "KeijoService.TurnOnResponse")
	proto.RegisterType((*TurnOffRequest)(nil), "KeijoService.TurnOffRequest")
	proto.RegisterType((*TurnOffResponse)(nil), "KeijoService.TurnOffResponse")
	proto.RegisterType((*ChangeSourceRequest)(nil), "KeijoService.ChangeSourceRequest")
	proto.RegisterType((*ChangeSourceResponse)(nil), "KeijoService.ChangeSourceResponse")
	proto.RegisterEnum("KeijoService.Devices", Devices_name, Devices_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Keijo service

type KeijoClient interface {
	TurnOn(ctx context.Context, in *TurnOnRequest, opts ...grpc.CallOption) (*TurnOnResponse, error)
	TurnOff(ctx context.Context, in *TurnOffRequest, opts ...grpc.CallOption) (*TurnOffResponse, error)
	ChangeSource(ctx context.Context, in *ChangeSourceRequest, opts ...grpc.CallOption) (*ChangeSourceResponse, error)
}

type keijoClient struct {
	cc *grpc.ClientConn
}

func NewKeijoClient(cc *grpc.ClientConn) KeijoClient {
	return &keijoClient{cc}
}

func (c *keijoClient) TurnOn(ctx context.Context, in *TurnOnRequest, opts ...grpc.CallOption) (*TurnOnResponse, error) {
	out := new(TurnOnResponse)
	err := grpc.Invoke(ctx, "/KeijoService.Keijo/turnOn", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keijoClient) TurnOff(ctx context.Context, in *TurnOffRequest, opts ...grpc.CallOption) (*TurnOffResponse, error) {
	out := new(TurnOffResponse)
	err := grpc.Invoke(ctx, "/KeijoService.Keijo/turnOff", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keijoClient) ChangeSource(ctx context.Context, in *ChangeSourceRequest, opts ...grpc.CallOption) (*ChangeSourceResponse, error) {
	out := new(ChangeSourceResponse)
	err := grpc.Invoke(ctx, "/KeijoService.Keijo/changeSource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Keijo service

type KeijoServer interface {
	TurnOn(context.Context, *TurnOnRequest) (*TurnOnResponse, error)
	TurnOff(context.Context, *TurnOffRequest) (*TurnOffResponse, error)
	ChangeSource(context.Context, *ChangeSourceRequest) (*ChangeSourceResponse, error)
}

func RegisterKeijoServer(s *grpc.Server, srv KeijoServer) {
	s.RegisterService(&_Keijo_serviceDesc, srv)
}

func _Keijo_TurnOn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TurnOnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeijoServer).TurnOn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/KeijoService.Keijo/TurnOn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeijoServer).TurnOn(ctx, req.(*TurnOnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keijo_TurnOff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TurnOffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeijoServer).TurnOff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/KeijoService.Keijo/TurnOff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeijoServer).TurnOff(ctx, req.(*TurnOffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keijo_ChangeSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeijoServer).ChangeSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/KeijoService.Keijo/ChangeSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeijoServer).ChangeSource(ctx, req.(*ChangeSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Keijo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "KeijoService.Keijo",
	HandlerType: (*KeijoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "turnOn",
			Handler:    _Keijo_TurnOn_Handler,
		},
		{
			MethodName: "turnOff",
			Handler:    _Keijo_TurnOff_Handler,
		},
		{
			MethodName: "changeSource",
			Handler:    _Keijo_ChangeSource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "keijo_service.proto",
}

func init() { proto.RegisterFile("keijo_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 410 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x5d, 0x6f, 0x94, 0x40,
	0x14, 0x2d, 0x5b, 0x0b, 0xf6, 0x16, 0xe8, 0x75, 0xaa, 0x66, 0xb3, 0x6a, 0xa2, 0x3c, 0x69, 0x13,
	0x37, 0x59, 0xb6, 0x89, 0xcf, 0x14, 0x26, 0xda, 0x54, 0x17, 0x33, 0xd0, 0x35, 0xfb, 0xb4, 0xd9,
	0x8f, 0x59, 0x45, 0x23, 0xac, 0x0c, 0xf8, 0x7f, 0xfc, 0x7d, 0x3e, 0xf9, 0x0f, 0x0c, 0x9f, 0x19,
	0x12, 0xb6, 0x4f, 0x70, 0xee, 0x3d, 0xe7, 0x70, 0x32, 0x73, 0x80, 0x8b, 0x1f, 0x3c, 0xfa, 0x9e,
	0x2c, 0x05, 0x4f, 0x7f, 0x47, 0x1b, 0x3e, 0xde, 0xa7, 0x49, 0x96, 0x10, 0xfd, 0xb6, 0x18, 0x06,
	0xd5, 0xcc, 0x7a, 0x03, 0x46, 0x98, 0xa7, 0xb1, 0x1f, 0x33, 0xfe, 0x2b, 0xe7, 0x22, 0x23, 0x43,
	0xd0, 0x56, 0xdb, 0x6d, 0xca, 0x85, 0x18, 0x2a, 0x2f, 0x95, 0xd7, 0x06, 0x6b, 0xa0, 0x85, 0x60,
	0x36, 0x54, 0xb1, 0x4f, 0x62, 0xc1, 0xad, 0xcb, 0x7a, 0xb2, 0xdb, 0xf5, 0xa8, 0x07, 0x5d, 0xf5,
	0x23, 0x38, 0x6f, 0xb9, 0xb5, 0xfc, 0x8f, 0x02, 0x17, 0xee, 0xb7, 0x55, 0xfc, 0x95, 0x07, 0x49,
	0x9e, 0x6e, 0x78, 0x63, 0xf2, 0x16, 0x54, 0x51, 0x0e, 0xca, 0x04, 0xa6, 0xfd, 0x64, 0x2c, 0x47,
	0x1e, 0x7b, 0xbc, 0x78, 0x08, 0x56, 0x93, 0xc8, 0x3b, 0x38, 0xdb, 0x72, 0x91, 0x45, 0xf1, 0x2a,
	0x8b, 0x92, 0xb8, 0xfc, 0xee, 0x41, 0x8d, 0xcc, 0x24, 0x16, 0xe8, 0x95, 0xc5, 0x2c, 0xff, 0xb9,
	0xe6, 0xe9, 0xf0, 0xb8, 0x4c, 0xdc, 0x99, 0x59, 0x4f, 0xe1, 0x71, 0x37, 0x62, 0x95, 0xfd, 0xf2,
	0xaf, 0x02, 0x5a, 0x6d, 0x4a, 0x54, 0x18, 0x84, 0x73, 0x3c, 0x22, 0x26, 0x00, 0xa3, 0xae, 0xcf,
	0xbc, 0x9b, 0xd9, 0xfb, 0x09, 0x2a, 0x1d, 0x6c, 0xe3, 0x80, 0x00, 0xa8, 0xe1, 0xdd, 0x8c, 0xb2,
	0x09, 0x1e, 0x13, 0x03, 0x4e, 0x3f, 0x7f, 0x74, 0x16, 0xd7, 0x8e, 0x7b, 0x3b, 0xc1, 0x07, 0x04,
	0x41, 0x77, 0xee, 0xbc, 0x1b, 0x7f, 0x19, 0x2c, 0x82, 0x90, 0x7e, 0xc2, 0x93, 0x96, 0x6c, 0xa3,
	0xda, 0xbe, 0x4f, 0x51, 0x93, 0x85, 0x36, 0x3e, 0x94, 0xe1, 0x14, 0x4f, 0x5b, 0xe6, 0x15, 0x82,
	0xbc, 0xba, 0xc2, 0xb3, 0x02, 0x32, 0x1a, 0x50, 0x36, 0xa7, 0x9e, 0x8b, 0xba, 0x0c, 0x3d, 0x34,
	0x64, 0x48, 0xd1, 0x2c, 0xe0, 0x35, 0xf3, 0x1d, 0xcf, 0x75, 0x82, 0x10, 0xcf, 0xed, 0x7f, 0x0a,
	0x9c, 0x94, 0xe7, 0x49, 0x28, 0xa8, 0x59, 0x59, 0x02, 0xf2, 0xac, 0x7b, 0xc2, 0x9d, 0x16, 0x8d,
	0x9e, 0xf7, 0x2f, 0xeb, 0x8b, 0x3f, 0x22, 0x1f, 0x40, 0xcb, 0xaa, 0x36, 0x90, 0x3e, 0x6a, 0x5b,
	0xa8, 0xd1, 0x8b, 0x03, 0xdb, 0xd6, 0xe9, 0x0b, 0xe8, 0x1b, 0xe9, 0x82, 0xc8, 0xab, 0xae, 0xa0,
	0xa7, 0x5f, 0x23, 0xeb, 0x3e, 0x4a, 0x63, 0xbc, 0x56, 0xcb, 0xdf, 0x65, 0xfa, 0x3f, 0x00, 0x00,
	0xff, 0xff, 0xc5, 0x69, 0x08, 0x68, 0x45, 0x03, 0x00, 0x00,
}

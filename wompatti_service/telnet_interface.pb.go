// Code generated by protoc-gen-go.
// source: telnet_interface.proto
// DO NOT EDIT!

package WompattiService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EditTelnetInterfaceResponse_State int32

const (
	EditTelnetInterfaceResponse_SUCCESS   EditTelnetInterfaceResponse_State = 0
	EditTelnetInterfaceResponse_NOT_FOUND EditTelnetInterfaceResponse_State = 1
)

var EditTelnetInterfaceResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var EditTelnetInterfaceResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x EditTelnetInterfaceResponse_State) String() string {
	return proto.EnumName(EditTelnetInterfaceResponse_State_name, int32(x))
}
func (EditTelnetInterfaceResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor8, []int{9, 0}
}

type RemoveTelnetInterfaceResponse_State int32

const (
	RemoveTelnetInterfaceResponse_SUCCESS   RemoveTelnetInterfaceResponse_State = 0
	RemoveTelnetInterfaceResponse_NOT_FOUND RemoveTelnetInterfaceResponse_State = 1
)

var RemoveTelnetInterfaceResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var RemoveTelnetInterfaceResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x RemoveTelnetInterfaceResponse_State) String() string {
	return proto.EnumName(RemoveTelnetInterfaceResponse_State_name, int32(x))
}
func (RemoveTelnetInterfaceResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor8, []int{11, 0}
}

type TelnetInterface struct {
	Id   uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Ip   string `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
	Port string `protobuf:"bytes,3,opt,name=port" json:"port,omitempty"`
}

func (m *TelnetInterface) Reset()                    { *m = TelnetInterface{} }
func (m *TelnetInterface) String() string            { return proto.CompactTextString(m) }
func (*TelnetInterface) ProtoMessage()               {}
func (*TelnetInterface) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *TelnetInterface) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TelnetInterface) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *TelnetInterface) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type TelnetInterfacesConnection struct {
	PageInfo   *PageInfo               `protobuf:"bytes,1,opt,name=pageInfo" json:"pageInfo,omitempty"`
	Edges      []*TelnetInterfacesEdge `protobuf:"bytes,2,rep,name=edges" json:"edges,omitempty"`
	TotalCount uint32                  `protobuf:"varint,3,opt,name=totalCount" json:"totalCount,omitempty"`
}

func (m *TelnetInterfacesConnection) Reset()                    { *m = TelnetInterfacesConnection{} }
func (m *TelnetInterfacesConnection) String() string            { return proto.CompactTextString(m) }
func (*TelnetInterfacesConnection) ProtoMessage()               {}
func (*TelnetInterfacesConnection) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *TelnetInterfacesConnection) GetPageInfo() *PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

func (m *TelnetInterfacesConnection) GetEdges() []*TelnetInterfacesEdge {
	if m != nil {
		return m.Edges
	}
	return nil
}

func (m *TelnetInterfacesConnection) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type TelnetInterfacesEdge struct {
	Node   *TelnetInterface `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	Cursor uint32           `protobuf:"varint,2,opt,name=cursor" json:"cursor,omitempty"`
}

func (m *TelnetInterfacesEdge) Reset()                    { *m = TelnetInterfacesEdge{} }
func (m *TelnetInterfacesEdge) String() string            { return proto.CompactTextString(m) }
func (*TelnetInterfacesEdge) ProtoMessage()               {}
func (*TelnetInterfacesEdge) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *TelnetInterfacesEdge) GetNode() *TelnetInterface {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *TelnetInterfacesEdge) GetCursor() uint32 {
	if m != nil {
		return m.Cursor
	}
	return 0
}

type FetchTelnetInterfacesRequest struct {
	After  uint32 `protobuf:"varint,1,opt,name=after" json:"after,omitempty"`
	Before uint32 `protobuf:"varint,2,opt,name=before" json:"before,omitempty"`
	First  uint32 `protobuf:"varint,3,opt,name=first" json:"first,omitempty"`
	Last   uint32 `protobuf:"varint,4,opt,name=last" json:"last,omitempty"`
}

func (m *FetchTelnetInterfacesRequest) Reset()                    { *m = FetchTelnetInterfacesRequest{} }
func (m *FetchTelnetInterfacesRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchTelnetInterfacesRequest) ProtoMessage()               {}
func (*FetchTelnetInterfacesRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *FetchTelnetInterfacesRequest) GetAfter() uint32 {
	if m != nil {
		return m.After
	}
	return 0
}

func (m *FetchTelnetInterfacesRequest) GetBefore() uint32 {
	if m != nil {
		return m.Before
	}
	return 0
}

func (m *FetchTelnetInterfacesRequest) GetFirst() uint32 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *FetchTelnetInterfacesRequest) GetLast() uint32 {
	if m != nil {
		return m.Last
	}
	return 0
}

type FetchTelnetInterfaceByIdRequest struct {
	TelnetInterfaceId []uint32 `protobuf:"varint,1,rep,packed,name=telnetInterfaceId" json:"telnetInterfaceId,omitempty"`
}

func (m *FetchTelnetInterfaceByIdRequest) Reset()                    { *m = FetchTelnetInterfaceByIdRequest{} }
func (m *FetchTelnetInterfaceByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchTelnetInterfaceByIdRequest) ProtoMessage()               {}
func (*FetchTelnetInterfaceByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *FetchTelnetInterfaceByIdRequest) GetTelnetInterfaceId() []uint32 {
	if m != nil {
		return m.TelnetInterfaceId
	}
	return nil
}

type FetchTelnetInterfaceByIdResponse struct {
	TelnetInterfaces []*TelnetInterface `protobuf:"bytes,1,rep,name=telnetInterfaces" json:"telnetInterfaces,omitempty"`
}

func (m *FetchTelnetInterfaceByIdResponse) Reset()         { *m = FetchTelnetInterfaceByIdResponse{} }
func (m *FetchTelnetInterfaceByIdResponse) String() string { return proto.CompactTextString(m) }
func (*FetchTelnetInterfaceByIdResponse) ProtoMessage()    {}
func (*FetchTelnetInterfaceByIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{5}
}

func (m *FetchTelnetInterfaceByIdResponse) GetTelnetInterfaces() []*TelnetInterface {
	if m != nil {
		return m.TelnetInterfaces
	}
	return nil
}

type CreateTelnetInterfaceRequest struct {
	Ip   string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port string `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
}

func (m *CreateTelnetInterfaceRequest) Reset()                    { *m = CreateTelnetInterfaceRequest{} }
func (m *CreateTelnetInterfaceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTelnetInterfaceRequest) ProtoMessage()               {}
func (*CreateTelnetInterfaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

func (m *CreateTelnetInterfaceRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *CreateTelnetInterfaceRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type CreateTelnetInterfaceResponse struct {
	TelnetInterface *TelnetInterface `protobuf:"bytes,1,opt,name=telnetInterface" json:"telnetInterface,omitempty"`
}

func (m *CreateTelnetInterfaceResponse) Reset()                    { *m = CreateTelnetInterfaceResponse{} }
func (m *CreateTelnetInterfaceResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateTelnetInterfaceResponse) ProtoMessage()               {}
func (*CreateTelnetInterfaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

func (m *CreateTelnetInterfaceResponse) GetTelnetInterface() *TelnetInterface {
	if m != nil {
		return m.TelnetInterface
	}
	return nil
}

type EditTelnetInterfaceRequest struct {
	Id   uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Ip   string `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
	Port string `protobuf:"bytes,3,opt,name=port" json:"port,omitempty"`
}

func (m *EditTelnetInterfaceRequest) Reset()                    { *m = EditTelnetInterfaceRequest{} }
func (m *EditTelnetInterfaceRequest) String() string            { return proto.CompactTextString(m) }
func (*EditTelnetInterfaceRequest) ProtoMessage()               {}
func (*EditTelnetInterfaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

func (m *EditTelnetInterfaceRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EditTelnetInterfaceRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *EditTelnetInterfaceRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type EditTelnetInterfaceResponse struct {
	State           EditTelnetInterfaceResponse_State `protobuf:"varint,1,opt,name=state,enum=WompattiService.EditTelnetInterfaceResponse_State" json:"state,omitempty"`
	TelnetInterface *TelnetInterface                  `protobuf:"bytes,2,opt,name=telnetInterface" json:"telnetInterface,omitempty"`
}

func (m *EditTelnetInterfaceResponse) Reset()                    { *m = EditTelnetInterfaceResponse{} }
func (m *EditTelnetInterfaceResponse) String() string            { return proto.CompactTextString(m) }
func (*EditTelnetInterfaceResponse) ProtoMessage()               {}
func (*EditTelnetInterfaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{9} }

func (m *EditTelnetInterfaceResponse) GetState() EditTelnetInterfaceResponse_State {
	if m != nil {
		return m.State
	}
	return EditTelnetInterfaceResponse_SUCCESS
}

func (m *EditTelnetInterfaceResponse) GetTelnetInterface() *TelnetInterface {
	if m != nil {
		return m.TelnetInterface
	}
	return nil
}

type RemoveTelnetInterfaceRequest struct {
	TelnetInterfaceId uint32 `protobuf:"varint,1,opt,name=telnetInterfaceId" json:"telnetInterfaceId,omitempty"`
}

func (m *RemoveTelnetInterfaceRequest) Reset()                    { *m = RemoveTelnetInterfaceRequest{} }
func (m *RemoveTelnetInterfaceRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveTelnetInterfaceRequest) ProtoMessage()               {}
func (*RemoveTelnetInterfaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{10} }

func (m *RemoveTelnetInterfaceRequest) GetTelnetInterfaceId() uint32 {
	if m != nil {
		return m.TelnetInterfaceId
	}
	return 0
}

type RemoveTelnetInterfaceResponse struct {
	State RemoveTelnetInterfaceResponse_State `protobuf:"varint,1,opt,name=state,enum=WompattiService.RemoveTelnetInterfaceResponse_State" json:"state,omitempty"`
}

func (m *RemoveTelnetInterfaceResponse) Reset()                    { *m = RemoveTelnetInterfaceResponse{} }
func (m *RemoveTelnetInterfaceResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveTelnetInterfaceResponse) ProtoMessage()               {}
func (*RemoveTelnetInterfaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{11} }

func (m *RemoveTelnetInterfaceResponse) GetState() RemoveTelnetInterfaceResponse_State {
	if m != nil {
		return m.State
	}
	return RemoveTelnetInterfaceResponse_SUCCESS
}

func init() {
	proto.RegisterType((*TelnetInterface)(nil), "WompattiService.TelnetInterface")
	proto.RegisterType((*TelnetInterfacesConnection)(nil), "WompattiService.TelnetInterfacesConnection")
	proto.RegisterType((*TelnetInterfacesEdge)(nil), "WompattiService.TelnetInterfacesEdge")
	proto.RegisterType((*FetchTelnetInterfacesRequest)(nil), "WompattiService.FetchTelnetInterfacesRequest")
	proto.RegisterType((*FetchTelnetInterfaceByIdRequest)(nil), "WompattiService.FetchTelnetInterfaceByIdRequest")
	proto.RegisterType((*FetchTelnetInterfaceByIdResponse)(nil), "WompattiService.FetchTelnetInterfaceByIdResponse")
	proto.RegisterType((*CreateTelnetInterfaceRequest)(nil), "WompattiService.CreateTelnetInterfaceRequest")
	proto.RegisterType((*CreateTelnetInterfaceResponse)(nil), "WompattiService.CreateTelnetInterfaceResponse")
	proto.RegisterType((*EditTelnetInterfaceRequest)(nil), "WompattiService.EditTelnetInterfaceRequest")
	proto.RegisterType((*EditTelnetInterfaceResponse)(nil), "WompattiService.EditTelnetInterfaceResponse")
	proto.RegisterType((*RemoveTelnetInterfaceRequest)(nil), "WompattiService.RemoveTelnetInterfaceRequest")
	proto.RegisterType((*RemoveTelnetInterfaceResponse)(nil), "WompattiService.RemoveTelnetInterfaceResponse")
	proto.RegisterEnum("WompattiService.EditTelnetInterfaceResponse_State", EditTelnetInterfaceResponse_State_name, EditTelnetInterfaceResponse_State_value)
	proto.RegisterEnum("WompattiService.RemoveTelnetInterfaceResponse_State", RemoveTelnetInterfaceResponse_State_name, RemoveTelnetInterfaceResponse_State_value)
}

func init() { proto.RegisterFile("telnet_interface.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 517 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdd, 0x6e, 0x12, 0x4f,
	0x14, 0xff, 0xef, 0x02, 0xfd, 0xdb, 0x43, 0x28, 0x38, 0x69, 0x1a, 0x44, 0xaa, 0x64, 0x8d, 0x09,
	0x17, 0x86, 0x0b, 0xac, 0x57, 0xde, 0x75, 0xa5, 0x11, 0xd3, 0x94, 0x66, 0xb6, 0x8d, 0x97, 0x64,
	0xbb, 0x7b, 0x16, 0x27, 0xd2, 0x99, 0x75, 0x66, 0x20, 0xf1, 0x2d, 0x7c, 0x14, 0x1f, 0xc7, 0xc7,
	0x31, 0x3b, 0xbb, 0x34, 0x65, 0x3f, 0x10, 0xbd, 0xdb, 0x33, 0x73, 0x7e, 0x1f, 0xf3, 0x3b, 0x07,
	0xe0, 0x44, 0xe3, 0x92, 0xa3, 0x9e, 0x33, 0xae, 0x51, 0x46, 0x7e, 0x80, 0xa3, 0x58, 0x0a, 0x2d,
	0x48, 0xfb, 0xb3, 0xb8, 0x8f, 0x7d, 0xad, 0x99, 0x87, 0x72, 0xcd, 0x02, 0xec, 0xb5, 0x63, 0x7f,
	0x81, 0x73, 0xc6, 0x23, 0x91, 0x76, 0x38, 0x13, 0x68, 0xdf, 0x18, 0xec, 0x74, 0x03, 0x25, 0x47,
	0x60, 0xb3, 0xb0, 0x6b, 0x0d, 0xac, 0x61, 0x8b, 0xda, 0x2c, 0x34, 0x75, 0xdc, 0xb5, 0x07, 0xd6,
	0xf0, 0x90, 0xda, 0x2c, 0x26, 0x04, 0xea, 0xb1, 0x90, 0xba, 0x5b, 0x33, 0x27, 0xe6, 0xdb, 0xf9,
	0x69, 0x41, 0x2f, 0xc7, 0xa3, 0x5c, 0xc1, 0x39, 0x06, 0x9a, 0x09, 0x4e, 0xde, 0xc1, 0x93, 0x44,
	0x78, 0xca, 0x23, 0x61, 0x88, 0x9b, 0xe3, 0x67, 0xa3, 0x9c, 0xb5, 0xd1, 0x75, 0xd6, 0x40, 0x1f,
	0x5a, 0xc9, 0x7b, 0x68, 0x60, 0xb8, 0x40, 0xd5, 0xb5, 0x07, 0xb5, 0x61, 0x73, 0xfc, 0xba, 0x80,
	0xc9, 0x4b, 0x4e, 0xc2, 0x05, 0xd2, 0x14, 0x43, 0x5e, 0x00, 0x68, 0xa1, 0xfd, 0xa5, 0x2b, 0x56,
	0x3c, 0x35, 0xdb, 0xa2, 0x8f, 0x4e, 0x9c, 0x10, 0x8e, 0xcb, 0xe0, 0xe4, 0x0c, 0xea, 0x5c, 0x84,
	0x98, 0xf9, 0x1c, 0xfc, 0x49, 0x93, 0x9a, 0x6e, 0x72, 0x02, 0x07, 0xc1, 0x4a, 0x2a, 0x21, 0x4d,
	0x50, 0x2d, 0x9a, 0x55, 0xce, 0x1a, 0xfa, 0x17, 0xa8, 0x83, 0x2f, 0x79, 0x29, 0x8a, 0xdf, 0x56,
	0xa8, 0x34, 0x39, 0x86, 0x86, 0x1f, 0x69, 0x94, 0x59, 0xde, 0x69, 0x91, 0xb0, 0xdd, 0x61, 0x24,
	0x24, 0x6e, 0xd8, 0xd2, 0x2a, 0xe9, 0x8e, 0x98, 0x54, 0x9b, 0xe7, 0xa4, 0x45, 0x32, 0x90, 0xa5,
	0xaf, 0x74, 0xb7, 0x6e, 0x0e, 0xcd, 0xb7, 0x33, 0x83, 0x97, 0x65, 0xba, 0xe7, 0xdf, 0xa7, 0xe1,
	0x46, 0xfa, 0x0d, 0x3c, 0xd5, 0xdb, 0xb7, 0xd3, 0x64, 0xec, 0xb5, 0x61, 0x8b, 0x16, 0x2f, 0x9c,
	0x18, 0x06, 0xd5, 0x84, 0x2a, 0x16, 0x5c, 0x21, 0xb9, 0x84, 0x4e, 0x0e, 0xa8, 0x0c, 0xe1, 0x3e,
	0x31, 0x16, 0x90, 0xce, 0x39, 0xf4, 0x5d, 0x89, 0xbe, 0xc6, 0x7c, 0x6b, 0xe6, 0x3f, 0xdd, 0x4b,
	0xab, 0xb0, 0x97, 0xf6, 0xa3, 0xbd, 0xfc, 0x0a, 0xa7, 0x15, 0x1c, 0x99, 0xe5, 0x4f, 0xd0, 0xce,
	0x09, 0xef, 0x3d, 0xf8, 0x3c, 0xd0, 0xb9, 0x86, 0xde, 0x24, 0x64, 0x7a, 0x87, 0xdd, 0xbf, 0xfd,
	0x59, 0xfd, 0xb2, 0xe0, 0x79, 0x29, 0x65, 0xe6, 0xfe, 0x23, 0x34, 0x94, 0xf6, 0x75, 0xea, 0xf9,
	0x68, 0x3c, 0x2e, 0x78, 0xde, 0x01, 0x1e, 0x79, 0x09, 0x92, 0xa6, 0x04, 0x65, 0x39, 0xd8, 0xff,
	0x9a, 0xc3, 0x2b, 0x68, 0x18, 0x6e, 0xd2, 0x84, 0xff, 0xbd, 0x5b, 0xd7, 0x9d, 0x78, 0x5e, 0xe7,
	0x3f, 0xd2, 0x82, 0xc3, 0xab, 0xd9, 0xcd, 0xfc, 0x62, 0x76, 0x7b, 0xf5, 0xa1, 0x63, 0x39, 0x97,
	0xd0, 0xa7, 0x78, 0x2f, 0xd6, 0x55, 0xd3, 0xad, 0xd8, 0x4e, 0xab, 0x7c, 0x3b, 0x7f, 0x58, 0x70,
	0x5a, 0x41, 0xf7, 0x30, 0xe8, 0xad, 0xa8, 0xce, 0x0a, 0xcf, 0xda, 0x09, 0xdf, 0x0a, 0x6b, 0xaf,
	0x07, 0xde, 0x1d, 0x98, 0x3f, 0xd8, 0xb7, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xb0, 0x7e, 0x3b,
	0xa6, 0x9c, 0x05, 0x00, 0x00,
}

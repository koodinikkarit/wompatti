// Code generated by protoc-gen-go.
// source: computer.proto
// DO NOT EDIT!

package WompattiService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EditComputerResponse_State int32

const (
	EditComputerResponse_SUCCESS   EditComputerResponse_State = 0
	EditComputerResponse_NOT_FOUND EditComputerResponse_State = 1
)

var EditComputerResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var EditComputerResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x EditComputerResponse_State) String() string {
	return proto.EnumName(EditComputerResponse_State_name, int32(x))
}
func (EditComputerResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{6, 0}
}

type RemoveComputerResponse_State int32

const (
	RemoveComputerResponse_SUCCESS   RemoveComputerResponse_State = 0
	RemoveComputerResponse_NOT_FOUND RemoveComputerResponse_State = 1
)

var RemoveComputerResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var RemoveComputerResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x RemoveComputerResponse_State) String() string {
	return proto.EnumName(RemoveComputerResponse_State_name, int32(x))
}
func (RemoveComputerResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{8, 0}
}

type FetchComputerByIdResponse_State int32

const (
	FetchComputerByIdResponse_SUCCESS   FetchComputerByIdResponse_State = 0
	FetchComputerByIdResponse_NOT_FOUND FetchComputerByIdResponse_State = 1
)

var FetchComputerByIdResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var FetchComputerByIdResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x FetchComputerByIdResponse_State) String() string {
	return proto.EnumName(FetchComputerByIdResponse_State_name, int32(x))
}
func (FetchComputerByIdResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{10, 0}
}

type FetchManyComputerByIdResponse_State int32

const (
	FetchManyComputerByIdResponse_SUCCESS   FetchManyComputerByIdResponse_State = 0
	FetchManyComputerByIdResponse_NOT_FOUND FetchManyComputerByIdResponse_State = 1
)

var FetchManyComputerByIdResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var FetchManyComputerByIdResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x FetchManyComputerByIdResponse_State) String() string {
	return proto.EnumName(FetchManyComputerByIdResponse_State_name, int32(x))
}
func (FetchManyComputerByIdResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{12, 0}
}

type Computer struct {
	Id             uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ArttuId        uint32 `protobuf:"varint,3,opt,name=arttuId" json:"arttuId,omitempty"`
	DeviceInfoId   uint32 `protobuf:"varint,4,opt,name=deviceInfoId" json:"deviceInfoId,omitempty"`
	WolInterfaceId uint32 `protobuf:"varint,5,opt,name=wolInterfaceId" json:"wolInterfaceId,omitempty"`
}

func (m *Computer) Reset()                    { *m = Computer{} }
func (m *Computer) String() string            { return proto.CompactTextString(m) }
func (*Computer) ProtoMessage()               {}
func (*Computer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Computer) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Computer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Computer) GetArttuId() uint32 {
	if m != nil {
		return m.ArttuId
	}
	return 0
}

func (m *Computer) GetDeviceInfoId() uint32 {
	if m != nil {
		return m.DeviceInfoId
	}
	return 0
}

func (m *Computer) GetWolInterfaceId() uint32 {
	if m != nil {
		return m.WolInterfaceId
	}
	return 0
}

type ComputersEdge struct {
	Node   *Computer `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	Cursor string    `protobuf:"bytes,2,opt,name=cursor" json:"cursor,omitempty"`
}

func (m *ComputersEdge) Reset()                    { *m = ComputersEdge{} }
func (m *ComputersEdge) String() string            { return proto.CompactTextString(m) }
func (*ComputersEdge) ProtoMessage()               {}
func (*ComputersEdge) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ComputersEdge) GetNode() *Computer {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *ComputersEdge) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

type ComputersConnection struct {
	PageInfo   *PageInfo        `protobuf:"bytes,1,opt,name=pageInfo" json:"pageInfo,omitempty"`
	Edges      []*ComputersEdge `protobuf:"bytes,2,rep,name=edges" json:"edges,omitempty"`
	TotalCount uint32           `protobuf:"varint,3,opt,name=totalCount" json:"totalCount,omitempty"`
}

func (m *ComputersConnection) Reset()                    { *m = ComputersConnection{} }
func (m *ComputersConnection) String() string            { return proto.CompactTextString(m) }
func (*ComputersConnection) ProtoMessage()               {}
func (*ComputersConnection) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ComputersConnection) GetPageInfo() *PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

func (m *ComputersConnection) GetEdges() []*ComputersEdge {
	if m != nil {
		return m.Edges
	}
	return nil
}

func (m *ComputersConnection) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type CreateComputerRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateComputerRequest) Reset()                    { *m = CreateComputerRequest{} }
func (m *CreateComputerRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateComputerRequest) ProtoMessage()               {}
func (*CreateComputerRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *CreateComputerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateComputerResponse struct {
	Computer   *Computer   `protobuf:"bytes,1,opt,name=computer" json:"computer,omitempty"`
	DeviceInfo *DeviceInfo `protobuf:"bytes,2,opt,name=deviceInfo" json:"deviceInfo,omitempty"`
}

func (m *CreateComputerResponse) Reset()                    { *m = CreateComputerResponse{} }
func (m *CreateComputerResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateComputerResponse) ProtoMessage()               {}
func (*CreateComputerResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *CreateComputerResponse) GetComputer() *Computer {
	if m != nil {
		return m.Computer
	}
	return nil
}

func (m *CreateComputerResponse) GetDeviceInfo() *DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

type EditComputerRequest struct {
	ComputerId     uint32 `protobuf:"varint,1,opt,name=computerId" json:"computerId,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ArttuId        uint32 `protobuf:"varint,3,opt,name=arttuId" json:"arttuId,omitempty"`
	DeviceInfoId   uint32 `protobuf:"varint,4,opt,name=deviceInfoId" json:"deviceInfoId,omitempty"`
	WolInterfaceId uint32 `protobuf:"varint,5,opt,name=wolInterfaceId" json:"wolInterfaceId,omitempty"`
}

func (m *EditComputerRequest) Reset()                    { *m = EditComputerRequest{} }
func (m *EditComputerRequest) String() string            { return proto.CompactTextString(m) }
func (*EditComputerRequest) ProtoMessage()               {}
func (*EditComputerRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *EditComputerRequest) GetComputerId() uint32 {
	if m != nil {
		return m.ComputerId
	}
	return 0
}

func (m *EditComputerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EditComputerRequest) GetArttuId() uint32 {
	if m != nil {
		return m.ArttuId
	}
	return 0
}

func (m *EditComputerRequest) GetDeviceInfoId() uint32 {
	if m != nil {
		return m.DeviceInfoId
	}
	return 0
}

func (m *EditComputerRequest) GetWolInterfaceId() uint32 {
	if m != nil {
		return m.WolInterfaceId
	}
	return 0
}

type EditComputerResponse struct {
	Computer   *Computer                  `protobuf:"bytes,1,opt,name=computer" json:"computer,omitempty"`
	State      EditComputerResponse_State `protobuf:"varint,2,opt,name=state,enum=WompattiService.EditComputerResponse_State" json:"state,omitempty"`
	ComputerId uint32                     `protobuf:"varint,3,opt,name=computerId" json:"computerId,omitempty"`
}

func (m *EditComputerResponse) Reset()                    { *m = EditComputerResponse{} }
func (m *EditComputerResponse) String() string            { return proto.CompactTextString(m) }
func (*EditComputerResponse) ProtoMessage()               {}
func (*EditComputerResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *EditComputerResponse) GetComputer() *Computer {
	if m != nil {
		return m.Computer
	}
	return nil
}

func (m *EditComputerResponse) GetState() EditComputerResponse_State {
	if m != nil {
		return m.State
	}
	return EditComputerResponse_SUCCESS
}

func (m *EditComputerResponse) GetComputerId() uint32 {
	if m != nil {
		return m.ComputerId
	}
	return 0
}

type RemoveComputerRequest struct {
	ComputerId uint32 `protobuf:"varint,1,opt,name=computerId" json:"computerId,omitempty"`
}

func (m *RemoveComputerRequest) Reset()                    { *m = RemoveComputerRequest{} }
func (m *RemoveComputerRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveComputerRequest) ProtoMessage()               {}
func (*RemoveComputerRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *RemoveComputerRequest) GetComputerId() uint32 {
	if m != nil {
		return m.ComputerId
	}
	return 0
}

type RemoveComputerResponse struct {
	State RemoveComputerResponse_State `protobuf:"varint,1,opt,name=state,enum=WompattiService.RemoveComputerResponse_State" json:"state,omitempty"`
}

func (m *RemoveComputerResponse) Reset()                    { *m = RemoveComputerResponse{} }
func (m *RemoveComputerResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveComputerResponse) ProtoMessage()               {}
func (*RemoveComputerResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *RemoveComputerResponse) GetState() RemoveComputerResponse_State {
	if m != nil {
		return m.State
	}
	return RemoveComputerResponse_SUCCESS
}

type FetchComputerByIdRequest struct {
	ComputerIdt []uint32 `protobuf:"varint,1,rep,packed,name=computerIdt" json:"computerIdt,omitempty"`
}

func (m *FetchComputerByIdRequest) Reset()                    { *m = FetchComputerByIdRequest{} }
func (m *FetchComputerByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchComputerByIdRequest) ProtoMessage()               {}
func (*FetchComputerByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *FetchComputerByIdRequest) GetComputerIdt() []uint32 {
	if m != nil {
		return m.ComputerIdt
	}
	return nil
}

type FetchComputerByIdResponse struct {
	Computer   *Computer                       `protobuf:"bytes,1,opt,name=computer" json:"computer,omitempty"`
	State      FetchComputerByIdResponse_State `protobuf:"varint,2,opt,name=state,enum=WompattiService.FetchComputerByIdResponse_State" json:"state,omitempty"`
	ComputerId uint32                          `protobuf:"varint,3,opt,name=computerId" json:"computerId,omitempty"`
}

func (m *FetchComputerByIdResponse) Reset()                    { *m = FetchComputerByIdResponse{} }
func (m *FetchComputerByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchComputerByIdResponse) ProtoMessage()               {}
func (*FetchComputerByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *FetchComputerByIdResponse) GetComputer() *Computer {
	if m != nil {
		return m.Computer
	}
	return nil
}

func (m *FetchComputerByIdResponse) GetState() FetchComputerByIdResponse_State {
	if m != nil {
		return m.State
	}
	return FetchComputerByIdResponse_SUCCESS
}

func (m *FetchComputerByIdResponse) GetComputerId() uint32 {
	if m != nil {
		return m.ComputerId
	}
	return 0
}

type FetchManyComputerByIdRequest struct {
	Id []uint32 `protobuf:"varint,1,rep,packed,name=id" json:"id,omitempty"`
}

func (m *FetchManyComputerByIdRequest) Reset()                    { *m = FetchManyComputerByIdRequest{} }
func (m *FetchManyComputerByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchManyComputerByIdRequest) ProtoMessage()               {}
func (*FetchManyComputerByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *FetchManyComputerByIdRequest) GetId() []uint32 {
	if m != nil {
		return m.Id
	}
	return nil
}

type FetchManyComputerByIdResponse struct {
	Computer   *Computer                           `protobuf:"bytes,1,opt,name=computer" json:"computer,omitempty"`
	State      FetchManyComputerByIdResponse_State `protobuf:"varint,2,opt,name=state,enum=WompattiService.FetchManyComputerByIdResponse_State" json:"state,omitempty"`
	ComputerId uint32                              `protobuf:"varint,3,opt,name=computerId" json:"computerId,omitempty"`
}

func (m *FetchManyComputerByIdResponse) Reset()                    { *m = FetchManyComputerByIdResponse{} }
func (m *FetchManyComputerByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchManyComputerByIdResponse) ProtoMessage()               {}
func (*FetchManyComputerByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *FetchManyComputerByIdResponse) GetComputer() *Computer {
	if m != nil {
		return m.Computer
	}
	return nil
}

func (m *FetchManyComputerByIdResponse) GetState() FetchManyComputerByIdResponse_State {
	if m != nil {
		return m.State
	}
	return FetchManyComputerByIdResponse_SUCCESS
}

func (m *FetchManyComputerByIdResponse) GetComputerId() uint32 {
	if m != nil {
		return m.ComputerId
	}
	return 0
}

type FetchComputersRequest struct {
	Offset uint32 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *FetchComputersRequest) Reset()                    { *m = FetchComputersRequest{} }
func (m *FetchComputersRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchComputersRequest) ProtoMessage()               {}
func (*FetchComputersRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *FetchComputersRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FetchComputersRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func init() {
	proto.RegisterType((*Computer)(nil), "WompattiService.Computer")
	proto.RegisterType((*ComputersEdge)(nil), "WompattiService.ComputersEdge")
	proto.RegisterType((*ComputersConnection)(nil), "WompattiService.ComputersConnection")
	proto.RegisterType((*CreateComputerRequest)(nil), "WompattiService.CreateComputerRequest")
	proto.RegisterType((*CreateComputerResponse)(nil), "WompattiService.CreateComputerResponse")
	proto.RegisterType((*EditComputerRequest)(nil), "WompattiService.EditComputerRequest")
	proto.RegisterType((*EditComputerResponse)(nil), "WompattiService.EditComputerResponse")
	proto.RegisterType((*RemoveComputerRequest)(nil), "WompattiService.RemoveComputerRequest")
	proto.RegisterType((*RemoveComputerResponse)(nil), "WompattiService.RemoveComputerResponse")
	proto.RegisterType((*FetchComputerByIdRequest)(nil), "WompattiService.FetchComputerByIdRequest")
	proto.RegisterType((*FetchComputerByIdResponse)(nil), "WompattiService.FetchComputerByIdResponse")
	proto.RegisterType((*FetchManyComputerByIdRequest)(nil), "WompattiService.FetchManyComputerByIdRequest")
	proto.RegisterType((*FetchManyComputerByIdResponse)(nil), "WompattiService.FetchManyComputerByIdResponse")
	proto.RegisterType((*FetchComputersRequest)(nil), "WompattiService.FetchComputersRequest")
	proto.RegisterEnum("WompattiService.EditComputerResponse_State", EditComputerResponse_State_name, EditComputerResponse_State_value)
	proto.RegisterEnum("WompattiService.RemoveComputerResponse_State", RemoveComputerResponse_State_name, RemoveComputerResponse_State_value)
	proto.RegisterEnum("WompattiService.FetchComputerByIdResponse_State", FetchComputerByIdResponse_State_name, FetchComputerByIdResponse_State_value)
	proto.RegisterEnum("WompattiService.FetchManyComputerByIdResponse_State", FetchManyComputerByIdResponse_State_name, FetchManyComputerByIdResponse_State_value)
}

func init() { proto.RegisterFile("computer.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 604 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0x5d, 0x6f, 0x12, 0x41,
	0x14, 0x75, 0xf8, 0x6a, 0x7b, 0x11, 0x5a, 0xa7, 0x85, 0x6c, 0xab, 0x12, 0x32, 0x26, 0x86, 0xa4,
	0x29, 0x31, 0x58, 0xe3, 0x83, 0xbe, 0xe8, 0x16, 0x92, 0x35, 0xb1, 0x35, 0x8b, 0xd5, 0xc7, 0x66,
	0xdd, 0x19, 0x70, 0x13, 0x98, 0xc1, 0xdd, 0xa1, 0xa6, 0xaf, 0x3e, 0xfb, 0xe8, 0x2f, 0xf0, 0x0f,
	0xf8, 0x6b, 0x7c, 0xf6, 0xd1, 0xbf, 0x61, 0x98, 0xdd, 0x59, 0xd8, 0x85, 0x8d, 0x1a, 0xd2, 0xf4,
	0x09, 0xe6, 0x72, 0xce, 0xdc, 0x73, 0xce, 0xbd, 0x19, 0xa0, 0xea, 0x8a, 0xf1, 0x64, 0x2a, 0x99,
	0xdf, 0x9e, 0xf8, 0x42, 0x0a, 0xbc, 0xfd, 0x5e, 0x8c, 0x27, 0x8e, 0x94, 0x5e, 0x9f, 0xf9, 0x97,
	0x9e, 0xcb, 0x0e, 0xee, 0x50, 0x36, 0xfb, 0xbc, 0xf0, 0xf8, 0x40, 0x84, 0x98, 0x83, 0xed, 0x89,
	0x33, 0x5c, 0x2c, 0x90, 0x6f, 0x08, 0x36, 0xcd, 0xe8, 0x1e, 0x5c, 0x85, 0x9c, 0x47, 0x0d, 0xd4,
	0x44, 0xad, 0x8a, 0x9d, 0xf3, 0x28, 0xc6, 0x50, 0xe0, 0xce, 0x98, 0x19, 0xb9, 0x26, 0x6a, 0x6d,
	0xd9, 0xea, 0x3b, 0x36, 0x60, 0xc3, 0xf1, 0xa5, 0x9c, 0x5a, 0xd4, 0xc8, 0x2b, 0xa0, 0x3e, 0x62,
	0x02, 0xb7, 0xc3, 0x86, 0x16, 0x1f, 0x08, 0x8b, 0x1a, 0x05, 0xf5, 0x73, 0xa2, 0x86, 0x1f, 0x42,
	0xf5, 0xb3, 0x18, 0x59, 0x5c, 0x32, 0x7f, 0xe0, 0xb8, 0xcc, 0xa2, 0x46, 0x51, 0xa1, 0x52, 0x55,
	0xf2, 0x0e, 0x2a, 0x5a, 0x55, 0xd0, 0xa5, 0x43, 0x86, 0x8f, 0xa0, 0xc0, 0x05, 0x65, 0x4a, 0x5c,
	0xb9, 0xb3, 0xdf, 0x4e, 0x79, 0x6d, 0x6b, 0xb4, 0xad, 0x60, 0xb8, 0x0e, 0x25, 0x77, 0xea, 0x07,
	0xc2, 0x8f, 0xb4, 0x47, 0x27, 0xf2, 0x1d, 0xc1, 0x6e, 0x7c, 0xb1, 0x29, 0x38, 0x67, 0xae, 0xf4,
	0x04, 0xc7, 0x4f, 0x60, 0x73, 0x96, 0xcc, 0x4c, 0x65, 0x66, 0x8b, 0x37, 0x11, 0xc0, 0x8e, 0xa1,
	0xf8, 0x18, 0x8a, 0x8c, 0x0e, 0x59, 0x60, 0xe4, 0x9a, 0xf9, 0x56, 0xb9, 0xd3, 0xc8, 0x94, 0xa5,
	0x4c, 0xd8, 0x21, 0x18, 0x37, 0x00, 0xa4, 0x90, 0xce, 0xc8, 0x14, 0x53, 0x2e, 0xa3, 0x14, 0x17,
	0x2a, 0xe4, 0x10, 0x6a, 0xa6, 0xcf, 0x1c, 0xc9, 0x62, 0x53, 0xec, 0xd3, 0x94, 0x05, 0x32, 0x9e,
	0x07, 0x9a, 0xcf, 0x83, 0x7c, 0x45, 0x50, 0x4f, 0xa3, 0x83, 0x89, 0xe0, 0x01, 0x9b, 0x99, 0xd2,
	0x2b, 0xf2, 0xf7, 0xdc, 0x62, 0x28, 0x7e, 0x06, 0x30, 0x9f, 0x99, 0xca, 0xaf, 0xdc, 0xb9, 0xbb,
	0x44, 0x3c, 0x89, 0x21, 0xf6, 0x02, 0x9c, 0xfc, 0x40, 0xb0, 0xdb, 0xa5, 0x9e, 0x4c, 0x4b, 0x6f,
	0x00, 0xe8, 0x06, 0x96, 0x5e, 0xb1, 0x85, 0xca, 0x0d, 0xae, 0xda, 0x4f, 0x04, 0x7b, 0x49, 0xc5,
	0xeb, 0xc5, 0xf7, 0x02, 0x8a, 0x81, 0x74, 0x64, 0x68, 0xa5, 0xda, 0x39, 0x5c, 0xe2, 0xac, 0x6a,
	0xd6, 0xee, 0xcf, 0x28, 0x76, 0xc8, 0x4c, 0x85, 0x95, 0x4f, 0x87, 0x45, 0x1e, 0x40, 0x51, 0xe1,
	0x71, 0x19, 0x36, 0xfa, 0xe7, 0xa6, 0xd9, 0xed, 0xf7, 0x77, 0x6e, 0xe1, 0x0a, 0x6c, 0x9d, 0x9e,
	0xbd, 0xbd, 0xe8, 0x9d, 0x9d, 0x9f, 0x9e, 0xec, 0x20, 0xf2, 0x14, 0x6a, 0x36, 0x1b, 0x8b, 0x4b,
	0xf6, 0x9f, 0xa3, 0x20, 0x5f, 0x10, 0xd4, 0xd3, 0xcc, 0x28, 0x12, 0x53, 0x7b, 0x43, 0xca, 0xdb,
	0xd1, 0x92, 0xb7, 0xd5, 0xbc, 0x84, 0xbb, 0x7f, 0x53, 0xff, 0x1c, 0x8c, 0x1e, 0x93, 0xee, 0x47,
	0x7d, 0xd5, 0xcb, 0x2b, 0x8b, 0x6a, 0x03, 0x4d, 0x28, 0xcf, 0xe5, 0x4a, 0x03, 0x35, 0xf3, 0xad,
	0x8a, 0xbd, 0x58, 0x22, 0xbf, 0x10, 0xec, 0xaf, 0xa0, 0xaf, 0x37, 0xd8, 0x5e, 0x72, 0xb0, 0x8f,
	0x96, 0x38, 0x99, 0x1d, 0xaf, 0x61, 0xba, 0x6d, 0xb8, 0xa7, 0xda, 0xbd, 0x76, 0xf8, 0xd5, 0xaa,
	0x8c, 0xf4, 0x53, 0x9e, 0x0f, 0x9f, 0x72, 0xf2, 0x1b, 0xc1, 0xfd, 0x0c, 0xc2, 0x7a, 0xa9, 0xbc,
	0x4a, 0xa6, 0x72, 0xbc, 0x3a, 0x95, 0xac, 0xae, 0xd7, 0x90, 0x4c, 0x17, 0x6a, 0x89, 0x41, 0x04,
	0x3a, 0x92, 0x3a, 0x94, 0xc4, 0x60, 0x10, 0x30, 0x19, 0xed, 0x7c, 0x74, 0xc2, 0x7b, 0x50, 0x1c,
	0x79, 0x63, 0x4f, 0x2a, 0x07, 0x15, 0x3b, 0x3c, 0x7c, 0x28, 0xa9, 0xff, 0xc7, 0xc7, 0x7f, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x1b, 0x6e, 0xb8, 0xd2, 0x66, 0x07, 0x00, 0x00,
}

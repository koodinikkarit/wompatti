// Code generated by protoc-gen-go.
// source: computer.proto
// DO NOT EDIT!

package WompattiService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UpdateComputerResponse_State int32

const (
	UpdateComputerResponse_SUCCESS   UpdateComputerResponse_State = 0
	UpdateComputerResponse_NOT_FOUND UpdateComputerResponse_State = 1
)

var UpdateComputerResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var UpdateComputerResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x UpdateComputerResponse_State) String() string {
	return proto.EnumName(UpdateComputerResponse_State_name, int32(x))
}
func (UpdateComputerResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{8, 0}
}

type RemoveComputerResponse_State int32

const (
	RemoveComputerResponse_SUCCESS   RemoveComputerResponse_State = 0
	RemoveComputerResponse_NOT_FOUND RemoveComputerResponse_State = 1
)

var RemoveComputerResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var RemoveComputerResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x RemoveComputerResponse_State) String() string {
	return proto.EnumName(RemoveComputerResponse_State_name, int32(x))
}
func (RemoveComputerResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{10, 0}
}

type WakeupResponse_State int32

const (
	WakeupResponse_SUCCESS   WakeupResponse_State = 0
	WakeupResponse_NOT_FOUND WakeupResponse_State = 1
)

var WakeupResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var WakeupResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x WakeupResponse_State) String() string {
	return proto.EnumName(WakeupResponse_State_name, int32(x))
}
func (WakeupResponse_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{12, 0} }

type Computer struct {
	Id             uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	WolInterfaceId uint32 `protobuf:"varint,5,opt,name=wolInterfaceId" json:"wolInterfaceId,omitempty"`
	Ip             string `protobuf:"bytes,6,opt,name=ip" json:"ip,omitempty"`
	Mac            string `protobuf:"bytes,7,opt,name=mac" json:"mac,omitempty"`
}

func (m *Computer) Reset()                    { *m = Computer{} }
func (m *Computer) String() string            { return proto.CompactTextString(m) }
func (*Computer) ProtoMessage()               {}
func (*Computer) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Computer) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Computer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Computer) GetWolInterfaceId() uint32 {
	if m != nil {
		return m.WolInterfaceId
	}
	return 0
}

func (m *Computer) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Computer) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type FetchComputersRequest struct {
	Offset uint32 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *FetchComputersRequest) Reset()                    { *m = FetchComputersRequest{} }
func (m *FetchComputersRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchComputersRequest) ProtoMessage()               {}
func (*FetchComputersRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *FetchComputersRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FetchComputersRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type FetchComputersResponse struct {
	Computers    []*Computer `protobuf:"bytes,1,rep,name=computers" json:"computers,omitempty"`
	MaxComputers uint32      `protobuf:"varint,2,opt,name=maxComputers" json:"maxComputers,omitempty"`
}

func (m *FetchComputersResponse) Reset()                    { *m = FetchComputersResponse{} }
func (m *FetchComputersResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchComputersResponse) ProtoMessage()               {}
func (*FetchComputersResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *FetchComputersResponse) GetComputers() []*Computer {
	if m != nil {
		return m.Computers
	}
	return nil
}

func (m *FetchComputersResponse) GetMaxComputers() uint32 {
	if m != nil {
		return m.MaxComputers
	}
	return 0
}

type FetchComputerByIdRequest struct {
	ComputerIds []uint32 `protobuf:"varint,1,rep,packed,name=computerIds" json:"computerIds,omitempty"`
}

func (m *FetchComputerByIdRequest) Reset()                    { *m = FetchComputerByIdRequest{} }
func (m *FetchComputerByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchComputerByIdRequest) ProtoMessage()               {}
func (*FetchComputerByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *FetchComputerByIdRequest) GetComputerIds() []uint32 {
	if m != nil {
		return m.ComputerIds
	}
	return nil
}

type FetchComputerByIdResponse struct {
	Computers []*Computer `protobuf:"bytes,1,rep,name=computers" json:"computers,omitempty"`
}

func (m *FetchComputerByIdResponse) Reset()                    { *m = FetchComputerByIdResponse{} }
func (m *FetchComputerByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchComputerByIdResponse) ProtoMessage()               {}
func (*FetchComputerByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *FetchComputerByIdResponse) GetComputers() []*Computer {
	if m != nil {
		return m.Computers
	}
	return nil
}

type CreateComputerRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateComputerRequest) Reset()                    { *m = CreateComputerRequest{} }
func (m *CreateComputerRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateComputerRequest) ProtoMessage()               {}
func (*CreateComputerRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *CreateComputerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateComputerResponse struct {
	Computer *Computer `protobuf:"bytes,1,opt,name=computer" json:"computer,omitempty"`
}

func (m *CreateComputerResponse) Reset()                    { *m = CreateComputerResponse{} }
func (m *CreateComputerResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateComputerResponse) ProtoMessage()               {}
func (*CreateComputerResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *CreateComputerResponse) GetComputer() *Computer {
	if m != nil {
		return m.Computer
	}
	return nil
}

type UpdateComputerRequest struct {
	ComputerId     uint32 `protobuf:"varint,1,opt,name=computerId" json:"computerId,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	WolInterfaceId uint32 `protobuf:"varint,3,opt,name=wolInterfaceId" json:"wolInterfaceId,omitempty"`
	Ip             string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	Mac            string `protobuf:"bytes,5,opt,name=mac" json:"mac,omitempty"`
}

func (m *UpdateComputerRequest) Reset()                    { *m = UpdateComputerRequest{} }
func (m *UpdateComputerRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateComputerRequest) ProtoMessage()               {}
func (*UpdateComputerRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *UpdateComputerRequest) GetComputerId() uint32 {
	if m != nil {
		return m.ComputerId
	}
	return 0
}

func (m *UpdateComputerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateComputerRequest) GetWolInterfaceId() uint32 {
	if m != nil {
		return m.WolInterfaceId
	}
	return 0
}

func (m *UpdateComputerRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *UpdateComputerRequest) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type UpdateComputerResponse struct {
	Computer *Computer                    `protobuf:"bytes,1,opt,name=computer" json:"computer,omitempty"`
	State    UpdateComputerResponse_State `protobuf:"varint,2,opt,name=state,enum=WompattiService.UpdateComputerResponse_State" json:"state,omitempty"`
	Success  bool                         `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
}

func (m *UpdateComputerResponse) Reset()                    { *m = UpdateComputerResponse{} }
func (m *UpdateComputerResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateComputerResponse) ProtoMessage()               {}
func (*UpdateComputerResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *UpdateComputerResponse) GetComputer() *Computer {
	if m != nil {
		return m.Computer
	}
	return nil
}

func (m *UpdateComputerResponse) GetState() UpdateComputerResponse_State {
	if m != nil {
		return m.State
	}
	return UpdateComputerResponse_SUCCESS
}

func (m *UpdateComputerResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RemoveComputerRequest struct {
	ComputerId uint32 `protobuf:"varint,1,opt,name=computerId" json:"computerId,omitempty"`
}

func (m *RemoveComputerRequest) Reset()                    { *m = RemoveComputerRequest{} }
func (m *RemoveComputerRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveComputerRequest) ProtoMessage()               {}
func (*RemoveComputerRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *RemoveComputerRequest) GetComputerId() uint32 {
	if m != nil {
		return m.ComputerId
	}
	return 0
}

type RemoveComputerResponse struct {
	State   RemoveComputerResponse_State `protobuf:"varint,1,opt,name=state,enum=WompattiService.RemoveComputerResponse_State" json:"state,omitempty"`
	Success bool                         `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *RemoveComputerResponse) Reset()                    { *m = RemoveComputerResponse{} }
func (m *RemoveComputerResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveComputerResponse) ProtoMessage()               {}
func (*RemoveComputerResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *RemoveComputerResponse) GetState() RemoveComputerResponse_State {
	if m != nil {
		return m.State
	}
	return RemoveComputerResponse_SUCCESS
}

func (m *RemoveComputerResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type WakeupRequest struct {
	ComputerId uint32 `protobuf:"varint,1,opt,name=computerId" json:"computerId,omitempty"`
}

func (m *WakeupRequest) Reset()                    { *m = WakeupRequest{} }
func (m *WakeupRequest) String() string            { return proto.CompactTextString(m) }
func (*WakeupRequest) ProtoMessage()               {}
func (*WakeupRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *WakeupRequest) GetComputerId() uint32 {
	if m != nil {
		return m.ComputerId
	}
	return 0
}

type WakeupResponse struct {
	State   WakeupResponse_State `protobuf:"varint,1,opt,name=state,enum=WompattiService.WakeupResponse_State" json:"state,omitempty"`
	Success bool                 `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *WakeupResponse) Reset()                    { *m = WakeupResponse{} }
func (m *WakeupResponse) String() string            { return proto.CompactTextString(m) }
func (*WakeupResponse) ProtoMessage()               {}
func (*WakeupResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *WakeupResponse) GetState() WakeupResponse_State {
	if m != nil {
		return m.State
	}
	return WakeupResponse_SUCCESS
}

func (m *WakeupResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Computer)(nil), "WompattiService.Computer")
	proto.RegisterType((*FetchComputersRequest)(nil), "WompattiService.FetchComputersRequest")
	proto.RegisterType((*FetchComputersResponse)(nil), "WompattiService.FetchComputersResponse")
	proto.RegisterType((*FetchComputerByIdRequest)(nil), "WompattiService.FetchComputerByIdRequest")
	proto.RegisterType((*FetchComputerByIdResponse)(nil), "WompattiService.FetchComputerByIdResponse")
	proto.RegisterType((*CreateComputerRequest)(nil), "WompattiService.CreateComputerRequest")
	proto.RegisterType((*CreateComputerResponse)(nil), "WompattiService.CreateComputerResponse")
	proto.RegisterType((*UpdateComputerRequest)(nil), "WompattiService.UpdateComputerRequest")
	proto.RegisterType((*UpdateComputerResponse)(nil), "WompattiService.UpdateComputerResponse")
	proto.RegisterType((*RemoveComputerRequest)(nil), "WompattiService.RemoveComputerRequest")
	proto.RegisterType((*RemoveComputerResponse)(nil), "WompattiService.RemoveComputerResponse")
	proto.RegisterType((*WakeupRequest)(nil), "WompattiService.WakeupRequest")
	proto.RegisterType((*WakeupResponse)(nil), "WompattiService.WakeupResponse")
	proto.RegisterEnum("WompattiService.UpdateComputerResponse_State", UpdateComputerResponse_State_name, UpdateComputerResponse_State_value)
	proto.RegisterEnum("WompattiService.RemoveComputerResponse_State", RemoveComputerResponse_State_name, RemoveComputerResponse_State_value)
	proto.RegisterEnum("WompattiService.WakeupResponse_State", WakeupResponse_State_name, WakeupResponse_State_value)
}

func init() { proto.RegisterFile("computer.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0xc5, 0xe9, 0xd2, 0x8f, 0x5b, 0x92, 0x15, 0x8b, 0x46, 0xd9, 0x1e, 0x50, 0x65, 0x04, 0xaa,
	0x84, 0x28, 0xd2, 0x10, 0xda, 0x03, 0x3c, 0x11, 0x36, 0xa9, 0x2f, 0xab, 0x94, 0xac, 0xda, 0xe3,
	0x14, 0x12, 0x17, 0x22, 0x96, 0xda, 0xc4, 0xce, 0x18, 0xff, 0x81, 0x57, 0xde, 0xf8, 0x57, 0xfc,
	0x21, 0x54, 0xc7, 0xee, 0x47, 0xd6, 0x4d, 0x83, 0xf1, 0x54, 0xfb, 0xf6, 0x9c, 0x7b, 0xce, 0xb9,
	0xbe, 0x0a, 0xb8, 0x09, 0xcb, 0x79, 0x29, 0x69, 0x31, 0xe2, 0x05, 0x93, 0x0c, 0xef, 0x9e, 0xb1,
	0x9c, 0xc7, 0x52, 0x66, 0x11, 0x2d, 0x2e, 0xb3, 0x84, 0xee, 0x3f, 0x4a, 0xe9, 0xe2, 0xf7, 0x3c,
	0x9b, 0xcf, 0x58, 0x85, 0xd9, 0xdf, 0xe5, 0xf1, 0xa7, 0xf5, 0x02, 0xb9, 0x82, 0x76, 0xa0, 0xdb,
	0x60, 0x17, 0xac, 0x2c, 0xf5, 0xd1, 0x00, 0x0d, 0x9d, 0xd0, 0xca, 0x52, 0x8c, 0x61, 0x67, 0x1e,
	0xe7, 0xd4, 0xb7, 0x06, 0x68, 0xd8, 0x09, 0xd5, 0x19, 0x3f, 0x07, 0xf7, 0x1b, 0xbb, 0x18, 0xcf,
	0x25, 0x2d, 0x66, 0x71, 0x42, 0xc7, 0xa9, 0x6f, 0x2b, 0x7c, 0xad, 0xaa, 0x7a, 0x71, 0xbf, 0xa9,
	0x98, 0x56, 0xc6, 0x71, 0x0f, 0x1a, 0x79, 0x9c, 0xf8, 0x2d, 0x55, 0x58, 0x1c, 0xc9, 0x11, 0xf4,
	0x8f, 0xa9, 0x4c, 0x3e, 0x1b, 0x79, 0x11, 0xd2, 0xaf, 0x25, 0x15, 0x12, 0x7b, 0xd0, 0x64, 0xb3,
	0x99, 0xa0, 0x52, 0x5b, 0xd1, 0x37, 0xfc, 0x18, 0xec, 0x8b, 0x2c, 0xcf, 0xa4, 0xf2, 0xe3, 0x84,
	0xd5, 0x85, 0x94, 0xe0, 0xd5, 0xdb, 0x08, 0xce, 0xe6, 0x82, 0xe2, 0x43, 0xe8, 0x98, 0x09, 0x09,
	0x1f, 0x0d, 0x1a, 0xc3, 0xee, 0xc1, 0xde, 0xa8, 0x36, 0xa3, 0x91, 0xa1, 0x85, 0x2b, 0x2c, 0x26,
	0xf0, 0x30, 0x8f, 0xaf, 0x96, 0x0d, 0xb5, 0xde, 0x46, 0x8d, 0xbc, 0x03, 0x7f, 0x43, 0xf6, 0xfd,
	0xf7, 0x71, 0x6a, 0x02, 0x0c, 0xa0, 0x6b, 0x9a, 0x8d, 0xd3, 0x4a, 0xda, 0x09, 0xd7, 0x4b, 0xe4,
	0x14, 0xf6, 0xb6, 0xb0, 0xef, 0xe9, 0x9b, 0xbc, 0x80, 0x7e, 0x50, 0xd0, 0x58, 0xd2, 0xe5, 0x9f,
	0xda, 0x90, 0x79, 0x48, 0xb4, 0x7a, 0x48, 0x32, 0x01, 0xaf, 0x0e, 0xd6, 0xfa, 0x6f, 0xa0, 0x6d,
	0x7a, 0x2a, 0xc6, 0xad, 0xf2, 0x4b, 0x28, 0xf9, 0x89, 0xa0, 0x3f, 0xe5, 0xe9, 0x16, 0xf9, 0x27,
	0x00, 0xab, 0xf0, 0xfa, 0x51, 0xd7, 0x2a, 0x77, 0xdc, 0xb3, 0xc6, 0x2d, 0x7b, 0xb6, 0x53, 0xdf,
	0x33, 0x7b, 0xb5, 0x67, 0xbf, 0x11, 0x78, 0x75, 0x5f, 0xf7, 0x4a, 0x8a, 0x03, 0xb0, 0x85, 0x8c,
	0x65, 0x65, 0xd8, 0x3d, 0x78, 0x79, 0x8d, 0xb3, 0x5d, 0x6e, 0x14, 0x2d, 0x48, 0x61, 0xc5, 0xc5,
	0x3e, 0xb4, 0x44, 0x99, 0x24, 0x54, 0x08, 0x95, 0xac, 0x1d, 0x9a, 0x2b, 0x79, 0x0a, 0xb6, 0x42,
	0xe2, 0x2e, 0xb4, 0xa2, 0x69, 0x10, 0x1c, 0x45, 0x51, 0xef, 0x01, 0x76, 0xa0, 0x73, 0x32, 0x39,
	0x3d, 0x3f, 0x9e, 0x4c, 0x4f, 0x3e, 0xf4, 0x10, 0x39, 0x84, 0x7e, 0x48, 0x73, 0x76, 0xf9, 0xb7,
	0xc3, 0x26, 0xbf, 0x10, 0x78, 0x75, 0xa6, 0x1e, 0xc7, 0x32, 0x17, 0xba, 0x21, 0xd7, 0x76, 0xde,
	0x8d, 0xb9, 0xac, 0x7f, 0xc8, 0xf5, 0x0a, 0x9c, 0xb3, 0xf8, 0x0b, 0x2d, 0xf9, 0x5d, 0xf3, 0xfc,
	0x40, 0xe0, 0x1a, 0x86, 0xce, 0xf1, 0x76, 0x33, 0xc7, 0xb3, 0x6b, 0x39, 0x36, 0xf1, 0xff, 0xd3,
	0xff, 0xc7, 0xa6, 0xfa, 0xac, 0xbe, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0x51, 0xe0, 0x6e, 0x7a,
	0x9d, 0x05, 0x00, 0x00,
}

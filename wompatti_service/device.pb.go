// Code generated by protoc-gen-go.
// source: device.proto
// DO NOT EDIT!

package WompattiService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EditDeviceResponse_State int32

const (
	EditDeviceResponse_SUCCESS   EditDeviceResponse_State = 0
	EditDeviceResponse_NOT_FOUND EditDeviceResponse_State = 1
)

var EditDeviceResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var EditDeviceResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x EditDeviceResponse_State) String() string {
	return proto.EnumName(EditDeviceResponse_State_name, int32(x))
}
func (EditDeviceResponse_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{10, 0} }

type RemoveDeviceResponse_State int32

const (
	RemoveDeviceResponse_SUCCESS   RemoveDeviceResponse_State = 0
	RemoveDeviceResponse_NOT_FOUND RemoveDeviceResponse_State = 1
)

var RemoveDeviceResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var RemoveDeviceResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x RemoveDeviceResponse_State) String() string {
	return proto.EnumName(RemoveDeviceResponse_State_name, int32(x))
}
func (RemoveDeviceResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{12, 0}
}

type Device struct {
	Id                uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name              string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	TelnetInterfaceId uint32 `protobuf:"varint,3,opt,name=telnetInterfaceId" json:"telnetInterfaceId,omitempty"`
	KeijoId           uint32 `protobuf:"varint,4,opt,name=keijoId" json:"keijoId,omitempty"`
	WolInterfaceId    uint32 `protobuf:"varint,5,opt,name=wolInterfaceId" json:"wolInterfaceId,omitempty"`
	SeveriId          uint32 `protobuf:"varint,6,opt,name=severiId" json:"severiId,omitempty"`
	DeviceTypeId      uint32 `protobuf:"varint,7,opt,name=deviceTypeId" json:"deviceTypeId,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Device) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetTelnetInterfaceId() uint32 {
	if m != nil {
		return m.TelnetInterfaceId
	}
	return 0
}

func (m *Device) GetKeijoId() uint32 {
	if m != nil {
		return m.KeijoId
	}
	return 0
}

func (m *Device) GetWolInterfaceId() uint32 {
	if m != nil {
		return m.WolInterfaceId
	}
	return 0
}

func (m *Device) GetSeveriId() uint32 {
	if m != nil {
		return m.SeveriId
	}
	return 0
}

func (m *Device) GetDeviceTypeId() uint32 {
	if m != nil {
		return m.DeviceTypeId
	}
	return 0
}

type FetchDevicesRequest struct {
}

func (m *FetchDevicesRequest) Reset()                    { *m = FetchDevicesRequest{} }
func (m *FetchDevicesRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchDevicesRequest) ProtoMessage()               {}
func (*FetchDevicesRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

type FetchDevicesResponse struct {
}

func (m *FetchDevicesResponse) Reset()                    { *m = FetchDevicesResponse{} }
func (m *FetchDevicesResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchDevicesResponse) ProtoMessage()               {}
func (*FetchDevicesResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

type FetchDeviceByIdRequest struct {
	DeviceIds []uint32 `protobuf:"varint,1,rep,packed,name=deviceIds" json:"deviceIds,omitempty"`
}

func (m *FetchDeviceByIdRequest) Reset()                    { *m = FetchDeviceByIdRequest{} }
func (m *FetchDeviceByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchDeviceByIdRequest) ProtoMessage()               {}
func (*FetchDeviceByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *FetchDeviceByIdRequest) GetDeviceIds() []uint32 {
	if m != nil {
		return m.DeviceIds
	}
	return nil
}

type FetchDeviceByIdResponse struct {
	Devices []*Device `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty"`
}

func (m *FetchDeviceByIdResponse) Reset()                    { *m = FetchDeviceByIdResponse{} }
func (m *FetchDeviceByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchDeviceByIdResponse) ProtoMessage()               {}
func (*FetchDeviceByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *FetchDeviceByIdResponse) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type DevicesConnection struct {
	PageInfo   *PageInfo      `protobuf:"bytes,1,opt,name=pageInfo" json:"pageInfo,omitempty"`
	Edges      []*DevicesEdge `protobuf:"bytes,2,rep,name=edges" json:"edges,omitempty"`
	TotalCount uint32         `protobuf:"varint,3,opt,name=totalCount" json:"totalCount,omitempty"`
}

func (m *DevicesConnection) Reset()                    { *m = DevicesConnection{} }
func (m *DevicesConnection) String() string            { return proto.CompactTextString(m) }
func (*DevicesConnection) ProtoMessage()               {}
func (*DevicesConnection) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *DevicesConnection) GetPageInfo() *PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

func (m *DevicesConnection) GetEdges() []*DevicesEdge {
	if m != nil {
		return m.Edges
	}
	return nil
}

func (m *DevicesConnection) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DevicesEdge struct {
	Node   *Device `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	Cursor uint32  `protobuf:"varint,2,opt,name=cursor" json:"cursor,omitempty"`
}

func (m *DevicesEdge) Reset()                    { *m = DevicesEdge{} }
func (m *DevicesEdge) String() string            { return proto.CompactTextString(m) }
func (*DevicesEdge) ProtoMessage()               {}
func (*DevicesEdge) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *DevicesEdge) GetNode() *Device {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *DevicesEdge) GetCursor() uint32 {
	if m != nil {
		return m.Cursor
	}
	return 0
}

type CreateDeviceRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateDeviceRequest) Reset()                    { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()               {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *CreateDeviceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateDeviceResponse struct {
	Device     *Device     `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	DeviceInfo *DeviceInfo `protobuf:"bytes,2,opt,name=deviceInfo" json:"deviceInfo,omitempty"`
}

func (m *CreateDeviceResponse) Reset()                    { *m = CreateDeviceResponse{} }
func (m *CreateDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceResponse) ProtoMessage()               {}
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *CreateDeviceResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *CreateDeviceResponse) GetDeviceInfo() *DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

type EditDeviceRequest struct {
	DeviceId          uint32 `protobuf:"varint,1,opt,name=deviceId" json:"deviceId,omitempty"`
	Name              string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	DeviceTypeId      uint32 `protobuf:"varint,4,opt,name=deviceTypeId" json:"deviceTypeId,omitempty"`
	SerialInterfaceId uint32 `protobuf:"varint,5,opt,name=serialInterfaceId" json:"serialInterfaceId,omitempty"`
	TelnetInterfaceId uint32 `protobuf:"varint,6,opt,name=telnetInterfaceId" json:"telnetInterfaceId,omitempty"`
	CecInterfaceId    uint32 `protobuf:"varint,7,opt,name=cecInterfaceId" json:"cecInterfaceId,omitempty"`
}

func (m *EditDeviceRequest) Reset()                    { *m = EditDeviceRequest{} }
func (m *EditDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*EditDeviceRequest) ProtoMessage()               {}
func (*EditDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *EditDeviceRequest) GetDeviceId() uint32 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *EditDeviceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EditDeviceRequest) GetDeviceTypeId() uint32 {
	if m != nil {
		return m.DeviceTypeId
	}
	return 0
}

func (m *EditDeviceRequest) GetSerialInterfaceId() uint32 {
	if m != nil {
		return m.SerialInterfaceId
	}
	return 0
}

func (m *EditDeviceRequest) GetTelnetInterfaceId() uint32 {
	if m != nil {
		return m.TelnetInterfaceId
	}
	return 0
}

func (m *EditDeviceRequest) GetCecInterfaceId() uint32 {
	if m != nil {
		return m.CecInterfaceId
	}
	return 0
}

type EditDeviceResponse struct {
	State  EditDeviceResponse_State `protobuf:"varint,1,opt,name=state,enum=WompattiService.EditDeviceResponse_State" json:"state,omitempty"`
	Device *Device                  `protobuf:"bytes,2,opt,name=device" json:"device,omitempty"`
}

func (m *EditDeviceResponse) Reset()                    { *m = EditDeviceResponse{} }
func (m *EditDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*EditDeviceResponse) ProtoMessage()               {}
func (*EditDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{10} }

func (m *EditDeviceResponse) GetState() EditDeviceResponse_State {
	if m != nil {
		return m.State
	}
	return EditDeviceResponse_SUCCESS
}

func (m *EditDeviceResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type RemoveDeviceRequest struct {
	DeviceId uint32 `protobuf:"varint,1,opt,name=deviceId" json:"deviceId,omitempty"`
}

func (m *RemoveDeviceRequest) Reset()                    { *m = RemoveDeviceRequest{} }
func (m *RemoveDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveDeviceRequest) ProtoMessage()               {}
func (*RemoveDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{11} }

func (m *RemoveDeviceRequest) GetDeviceId() uint32 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

type RemoveDeviceResponse struct {
	State RemoveDeviceResponse_State `protobuf:"varint,1,opt,name=state,enum=WompattiService.RemoveDeviceResponse_State" json:"state,omitempty"`
}

func (m *RemoveDeviceResponse) Reset()                    { *m = RemoveDeviceResponse{} }
func (m *RemoveDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveDeviceResponse) ProtoMessage()               {}
func (*RemoveDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *RemoveDeviceResponse) GetState() RemoveDeviceResponse_State {
	if m != nil {
		return m.State
	}
	return RemoveDeviceResponse_SUCCESS
}

func init() {
	proto.RegisterType((*Device)(nil), "WompattiService.Device")
	proto.RegisterType((*FetchDevicesRequest)(nil), "WompattiService.FetchDevicesRequest")
	proto.RegisterType((*FetchDevicesResponse)(nil), "WompattiService.FetchDevicesResponse")
	proto.RegisterType((*FetchDeviceByIdRequest)(nil), "WompattiService.FetchDeviceByIdRequest")
	proto.RegisterType((*FetchDeviceByIdResponse)(nil), "WompattiService.FetchDeviceByIdResponse")
	proto.RegisterType((*DevicesConnection)(nil), "WompattiService.DevicesConnection")
	proto.RegisterType((*DevicesEdge)(nil), "WompattiService.DevicesEdge")
	proto.RegisterType((*CreateDeviceRequest)(nil), "WompattiService.CreateDeviceRequest")
	proto.RegisterType((*CreateDeviceResponse)(nil), "WompattiService.CreateDeviceResponse")
	proto.RegisterType((*EditDeviceRequest)(nil), "WompattiService.EditDeviceRequest")
	proto.RegisterType((*EditDeviceResponse)(nil), "WompattiService.EditDeviceResponse")
	proto.RegisterType((*RemoveDeviceRequest)(nil), "WompattiService.RemoveDeviceRequest")
	proto.RegisterType((*RemoveDeviceResponse)(nil), "WompattiService.RemoveDeviceResponse")
	proto.RegisterEnum("WompattiService.EditDeviceResponse_State", EditDeviceResponse_State_name, EditDeviceResponse_State_value)
	proto.RegisterEnum("WompattiService.RemoveDeviceResponse_State", RemoveDeviceResponse_State_name, RemoveDeviceResponse_State_value)
}

func init() { proto.RegisterFile("device.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 604 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0xfe, 0xed, 0x26, 0x4e, 0x3b, 0xf9, 0x93, 0x36, 0xdb, 0x92, 0x9a, 0x50, 0xa1, 0x68, 0x91,
	0xaa, 0x54, 0x45, 0x41, 0x0d, 0x82, 0x0b, 0x07, 0x04, 0x69, 0x2a, 0x59, 0x42, 0x2d, 0x72, 0x5a,
	0x71, 0xac, 0x8c, 0x77, 0x12, 0x0c, 0x89, 0x37, 0xd8, 0x9b, 0xa0, 0x5e, 0x38, 0xf1, 0x1c, 0xbc,
	0x00, 0xaf, 0xc4, 0x1b, 0xf0, 0x12, 0xc8, 0xbb, 0x9b, 0xd4, 0x8e, 0x13, 0x91, 0x5b, 0xf6, 0x9b,
	0xef, 0x1b, 0xcf, 0xcc, 0x37, 0x13, 0xf8, 0x9f, 0xe1, 0x2c, 0xf0, 0xb1, 0x3d, 0x89, 0xb8, 0xe0,
	0x64, 0xf7, 0x03, 0x1f, 0x4f, 0x3c, 0x21, 0x82, 0x3e, 0x46, 0x09, 0xdc, 0xa8, 0xa9, 0xf0, 0x6d,
	0x10, 0x0e, 0xb8, 0xe2, 0x34, 0x76, 0x27, 0xde, 0x30, 0x0d, 0xd0, 0xdf, 0x06, 0x58, 0xe7, 0x92,
	0x46, 0xaa, 0x60, 0x06, 0xcc, 0x36, 0x9a, 0x46, 0xab, 0xe2, 0x9a, 0x01, 0x23, 0x04, 0x0a, 0xa1,
	0x37, 0x46, 0xdb, 0x6c, 0x1a, 0xad, 0x1d, 0x57, 0xfe, 0x26, 0x4f, 0xa1, 0x26, 0x70, 0x14, 0xa2,
	0x70, 0x42, 0x81, 0xd1, 0xc0, 0xf3, 0xd1, 0x61, 0xf6, 0x96, 0x94, 0xe4, 0x03, 0xc4, 0x86, 0xd2,
	0x17, 0x0c, 0x3e, 0x73, 0x87, 0xd9, 0x05, 0xc9, 0x99, 0x3f, 0xc9, 0x31, 0x54, 0xbf, 0xf1, 0x51,
	0x3a, 0x49, 0x51, 0x12, 0x96, 0x50, 0xd2, 0x80, 0xed, 0x18, 0x67, 0x18, 0x05, 0x0e, 0xb3, 0x2d,
	0xc9, 0x58, 0xbc, 0x09, 0x9d, 0xf7, 0x7f, 0x7d, 0x37, 0x49, 0x32, 0x94, 0x64, 0x3c, 0x83, 0xd1,
	0x07, 0xb0, 0x7f, 0x81, 0xc2, 0xff, 0xa4, 0x5a, 0x8c, 0x5d, 0xfc, 0x3a, 0xc5, 0x58, 0xd0, 0x3a,
	0x1c, 0x64, 0xe1, 0x78, 0xc2, 0xc3, 0x18, 0xe9, 0x4b, 0xa8, 0xa7, 0xf0, 0xb7, 0x77, 0x0e, 0xd3,
	0x0a, 0x72, 0x04, 0x3b, 0x2a, 0xb1, 0xc3, 0x62, 0xdb, 0x68, 0x6e, 0xb5, 0x2a, 0xee, 0x3d, 0x40,
	0xdf, 0xc1, 0x61, 0x4e, 0xa7, 0x52, 0x92, 0x33, 0x28, 0x29, 0x9e, 0x92, 0x95, 0x3b, 0x87, 0xed,
	0x25, 0x9f, 0xda, 0x4a, 0xe5, 0xce, 0x79, 0xf4, 0xa7, 0x01, 0x35, 0x5d, 0x59, 0x97, 0x87, 0x21,
	0xfa, 0x22, 0xe0, 0x21, 0x79, 0x01, 0xdb, 0x89, 0x79, 0x4e, 0x38, 0xe0, 0xd2, 0xa4, 0x72, 0xe7,
	0x61, 0x2e, 0xd3, 0x7b, 0x4d, 0x70, 0x17, 0x54, 0xd2, 0x81, 0x22, 0xb2, 0x21, 0xc6, 0xb6, 0x29,
	0xbf, 0x7e, 0xb4, 0xe6, 0xeb, 0x71, 0x8f, 0x0d, 0xd1, 0x55, 0x54, 0xf2, 0x18, 0x40, 0x70, 0xe1,
	0x8d, 0xba, 0x7c, 0x1a, 0x0a, 0x6d, 0x6f, 0x0a, 0xa1, 0x2e, 0x94, 0x53, 0x2a, 0x72, 0x0a, 0x85,
	0x90, 0x33, 0xd4, 0x55, 0xad, 0xed, 0x4f, 0x92, 0x48, 0x1d, 0x2c, 0x7f, 0x1a, 0xc5, 0x3c, 0x92,
	0x7b, 0x55, 0x71, 0xf5, 0x8b, 0x9e, 0xc0, 0x7e, 0x37, 0x42, 0x4f, 0xa0, 0x66, 0xeb, 0xb9, 0xcf,
	0x97, 0xd0, 0xb8, 0x5f, 0x42, 0xfa, 0xc3, 0x80, 0x83, 0x2c, 0x57, 0xcf, 0xfa, 0x19, 0x58, 0x6a,
	0x86, 0xff, 0x2a, 0x45, 0xd3, 0xc8, 0x2b, 0x00, 0x6d, 0x62, 0x32, 0x55, 0x53, 0x8a, 0x1e, 0xad,
	0x11, 0xc9, 0xb9, 0xa6, 0xe8, 0xf4, 0x8f, 0x01, 0xb5, 0x1e, 0x0b, 0x44, 0xb6, 0xe0, 0x06, 0x6c,
	0xcf, 0xf7, 0x42, 0xdf, 0xd2, 0xe2, 0xbd, 0x68, 0x66, 0x2b, 0x75, 0x51, 0xcb, 0x5b, 0x5c, 0xc8,
	0x6f, 0x71, 0x72, 0x75, 0x31, 0x46, 0x81, 0xb7, 0xe2, 0x60, 0xf2, 0x81, 0xd5, 0x37, 0x6a, 0xad,
	0xbb, 0xd1, 0x63, 0xa8, 0xfa, 0xe8, 0xa7, 0xa9, 0xea, 0x8e, 0x96, 0x50, 0xfa, 0xcb, 0x00, 0x92,
	0xee, 0x56, 0x8f, 0xfc, 0x35, 0x14, 0x63, 0xe1, 0x09, 0x35, 0xf1, 0x6a, 0xe7, 0x24, 0x37, 0xbc,
	0xbc, 0xa6, 0xdd, 0x4f, 0x04, 0xae, 0xd2, 0xa5, 0x3c, 0x33, 0x37, 0xf2, 0x8c, 0x3e, 0x81, 0xa2,
	0x4c, 0x40, 0xca, 0x50, 0xea, 0xdf, 0x74, 0xbb, 0xbd, 0x7e, 0x7f, 0xef, 0x3f, 0x52, 0x81, 0x9d,
	0xcb, 0xab, 0xeb, 0xdb, 0x8b, 0xab, 0x9b, 0xcb, 0xf3, 0x3d, 0x83, 0x9e, 0xc1, 0xbe, 0x8b, 0x63,
	0x3e, 0xc3, 0x8d, 0xcd, 0xa1, 0xdf, 0xe1, 0x20, 0x2b, 0xd1, 0x1d, 0xbe, 0xc9, 0x76, 0x78, 0x9a,
	0xab, 0x6f, 0x95, 0x2a, 0xd3, 0xe3, 0x46, 0x25, 0x7f, 0xb4, 0xe4, 0x1f, 0xf2, 0xf3, 0xbf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xac, 0x66, 0x64, 0x20, 0xd5, 0x05, 0x00, 0x00,
}

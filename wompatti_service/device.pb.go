// Code generated by protoc-gen-go.
// source: device.proto
// DO NOT EDIT!

package WompattiService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RemoveDeviceResponse_State int32

const (
	RemoveDeviceResponse_SUCCESS   RemoveDeviceResponse_State = 0
	RemoveDeviceResponse_NOT_FOUND RemoveDeviceResponse_State = 1
)

var RemoveDeviceResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var RemoveDeviceResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x RemoveDeviceResponse_State) String() string {
	return proto.EnumName(RemoveDeviceResponse_State_name, int32(x))
}
func (RemoveDeviceResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{4, 0}
}

type FetchDeviceByIdResponse_State int32

const (
	FetchDeviceByIdResponse_SUCCESS   FetchDeviceByIdResponse_State = 0
	FetchDeviceByIdResponse_NOT_FOUND FetchDeviceByIdResponse_State = 1
)

var FetchDeviceByIdResponse_State_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var FetchDeviceByIdResponse_State_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x FetchDeviceByIdResponse_State) String() string {
	return proto.EnumName(FetchDeviceByIdResponse_State_name, int32(x))
}
func (FetchDeviceByIdResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{7, 0}
}

type Device struct {
	Id           uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DeviceInfoId uint32 `protobuf:"varint,2,opt,name=deviceInfoId" json:"deviceInfoId,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Device) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Device) GetDeviceInfoId() uint32 {
	if m != nil {
		return m.DeviceInfoId
	}
	return 0
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateDeviceRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateDeviceRequest) Reset()                    { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()               {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *CreateDeviceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateDeviceResponse struct {
	Device     *Device     `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	DeviceInfo *DeviceInfo `protobuf:"bytes,2,opt,name=deviceInfo" json:"deviceInfo,omitempty"`
}

func (m *CreateDeviceResponse) Reset()                    { *m = CreateDeviceResponse{} }
func (m *CreateDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceResponse) ProtoMessage()               {}
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *CreateDeviceResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *CreateDeviceResponse) GetDeviceInfo() *DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

type RemoveDeviceRequest struct {
	DeviceId uint32 `protobuf:"varint,1,opt,name=deviceId" json:"deviceId,omitempty"`
}

func (m *RemoveDeviceRequest) Reset()                    { *m = RemoveDeviceRequest{} }
func (m *RemoveDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveDeviceRequest) ProtoMessage()               {}
func (*RemoveDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *RemoveDeviceRequest) GetDeviceId() uint32 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

type RemoveDeviceResponse struct {
	State RemoveDeviceResponse_State `protobuf:"varint,1,opt,name=state,enum=WompattiService.RemoveDeviceResponse_State" json:"state,omitempty"`
}

func (m *RemoveDeviceResponse) Reset()                    { *m = RemoveDeviceResponse{} }
func (m *RemoveDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveDeviceResponse) ProtoMessage()               {}
func (*RemoveDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *RemoveDeviceResponse) GetState() RemoveDeviceResponse_State {
	if m != nil {
		return m.State
	}
	return RemoveDeviceResponse_SUCCESS
}

type FetchDevicesRequest struct {
	Offset uint32 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *FetchDevicesRequest) Reset()                    { *m = FetchDevicesRequest{} }
func (m *FetchDevicesRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchDevicesRequest) ProtoMessage()               {}
func (*FetchDevicesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *FetchDevicesRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FetchDevicesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type FetchDeviceByIdRequest struct {
	DeviceIdt []uint32 `protobuf:"varint,1,rep,packed,name=deviceIdt" json:"deviceIdt,omitempty"`
}

func (m *FetchDeviceByIdRequest) Reset()                    { *m = FetchDeviceByIdRequest{} }
func (m *FetchDeviceByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchDeviceByIdRequest) ProtoMessage()               {}
func (*FetchDeviceByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *FetchDeviceByIdRequest) GetDeviceIdt() []uint32 {
	if m != nil {
		return m.DeviceIdt
	}
	return nil
}

type FetchDeviceByIdResponse struct {
	Device   *Device                       `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	State    FetchDeviceByIdResponse_State `protobuf:"varint,2,opt,name=state,enum=WompattiService.FetchDeviceByIdResponse_State" json:"state,omitempty"`
	DeviceId uint32                        `protobuf:"varint,3,opt,name=deviceId" json:"deviceId,omitempty"`
}

func (m *FetchDeviceByIdResponse) Reset()                    { *m = FetchDeviceByIdResponse{} }
func (m *FetchDeviceByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchDeviceByIdResponse) ProtoMessage()               {}
func (*FetchDeviceByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *FetchDeviceByIdResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *FetchDeviceByIdResponse) GetState() FetchDeviceByIdResponse_State {
	if m != nil {
		return m.State
	}
	return FetchDeviceByIdResponse_SUCCESS
}

func (m *FetchDeviceByIdResponse) GetDeviceId() uint32 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func init() {
	proto.RegisterType((*Device)(nil), "WompattiService.Device")
	proto.RegisterType((*CreateDeviceRequest)(nil), "WompattiService.CreateDeviceRequest")
	proto.RegisterType((*CreateDeviceResponse)(nil), "WompattiService.CreateDeviceResponse")
	proto.RegisterType((*RemoveDeviceRequest)(nil), "WompattiService.RemoveDeviceRequest")
	proto.RegisterType((*RemoveDeviceResponse)(nil), "WompattiService.RemoveDeviceResponse")
	proto.RegisterType((*FetchDevicesRequest)(nil), "WompattiService.FetchDevicesRequest")
	proto.RegisterType((*FetchDeviceByIdRequest)(nil), "WompattiService.FetchDeviceByIdRequest")
	proto.RegisterType((*FetchDeviceByIdResponse)(nil), "WompattiService.FetchDeviceByIdResponse")
	proto.RegisterEnum("WompattiService.RemoveDeviceResponse_State", RemoveDeviceResponse_State_name, RemoveDeviceResponse_State_value)
	proto.RegisterEnum("WompattiService.FetchDeviceByIdResponse_State", FetchDeviceByIdResponse_State_name, FetchDeviceByIdResponse_State_value)
}

func init() { proto.RegisterFile("device.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x41, 0x4f, 0xea, 0x40,
	0x14, 0x85, 0x5f, 0xcb, 0xa3, 0xef, 0x71, 0x11, 0xc4, 0x81, 0x00, 0x41, 0x17, 0x64, 0xdc, 0x60,
	0x4c, 0x6a, 0xc4, 0xc4, 0x8d, 0x2b, 0x2d, 0x92, 0xb0, 0x01, 0x33, 0x95, 0xb8, 0x24, 0x95, 0x4e,
	0xe3, 0x24, 0xb6, 0x83, 0x74, 0x24, 0x71, 0xe3, 0xca, 0x3f, 0xe8, 0x3f, 0x32, 0x9d, 0x99, 0x02,
	0x05, 0x49, 0x8c, 0xbb, 0xde, 0x3b, 0xdf, 0x39, 0x73, 0xe6, 0xde, 0x14, 0xf6, 0x7c, 0xba, 0x60,
	0x53, 0x6a, 0xcf, 0xe6, 0x5c, 0x70, 0xb4, 0xff, 0xc0, 0xc3, 0x99, 0x27, 0x04, 0x73, 0xe9, 0x3c,
	0x69, 0xb7, 0x0e, 0xd4, 0xf1, 0x84, 0x45, 0x01, 0x57, 0x0c, 0xbe, 0x03, 0xab, 0x27, 0x9b, 0xa8,
	0x0c, 0x26, 0xf3, 0x9b, 0x46, 0xdb, 0xe8, 0x94, 0x88, 0xc9, 0x7c, 0x84, 0x53, 0xb7, 0x41, 0x14,
	0xf0, 0x81, 0xdf, 0x34, 0xe5, 0x49, 0xa6, 0x87, 0x10, 0xfc, 0x8d, 0xbc, 0x90, 0x36, 0x73, 0x6d,
	0xa3, 0x53, 0x20, 0xf2, 0x1b, 0x9f, 0x40, 0xd5, 0x99, 0x53, 0x4f, 0x50, 0xe5, 0x4b, 0xe8, 0xcb,
	0x2b, 0x8d, 0xc5, 0x12, 0x35, 0xd6, 0xd0, 0x0f, 0x03, 0x6a, 0x59, 0x36, 0x9e, 0xf1, 0x28, 0xa6,
	0xe8, 0x0c, 0x2c, 0x75, 0x8f, 0xc4, 0x8b, 0xdd, 0x86, 0xbd, 0xf1, 0x14, 0x5b, 0x0b, 0x34, 0x86,
	0xae, 0x00, 0x56, 0xc1, 0x64, 0xd4, 0x62, 0xf7, 0x70, 0x87, 0x28, 0x41, 0xc8, 0x1a, 0x8e, 0xcf,
	0xa1, 0x4a, 0x68, 0xc8, 0x17, 0x1b, 0x89, 0x5b, 0xf0, 0x5f, 0x43, 0xe9, 0x58, 0x96, 0x35, 0x7e,
	0x87, 0x5a, 0x56, 0xa2, 0x83, 0x5f, 0x43, 0x3e, 0x16, 0x9e, 0x50, 0xb9, 0xcb, 0xdd, 0xd3, 0xad,
	0x08, 0xdf, 0xa9, 0x6c, 0x37, 0x91, 0x10, 0xa5, 0xc4, 0xc7, 0x90, 0x97, 0x35, 0x2a, 0xc2, 0x3f,
	0x77, 0xec, 0x38, 0xb7, 0xae, 0x5b, 0xf9, 0x83, 0x4a, 0x50, 0x18, 0x8e, 0xee, 0x27, 0xfd, 0xd1,
	0x78, 0xd8, 0xab, 0x18, 0xd8, 0x81, 0x6a, 0x9f, 0x8a, 0xe9, 0x93, 0x32, 0x8a, 0xd3, 0xc8, 0x75,
	0xb0, 0x78, 0x10, 0xc4, 0x54, 0xe8, 0xc0, 0xba, 0x42, 0x35, 0xc8, 0x3f, 0xb3, 0x90, 0x09, 0xbd,
	0x44, 0x55, 0xe0, 0x4b, 0xa8, 0xaf, 0x99, 0xdc, 0xbc, 0x0d, 0xfc, 0xd4, 0xe7, 0x08, 0x0a, 0xe9,
	0x53, 0x13, 0xab, 0x5c, 0xa7, 0x44, 0x56, 0x0d, 0xfc, 0x69, 0x40, 0x63, 0x4b, 0xf8, 0xdb, 0xcd,
	0xf5, 0xd2, 0x89, 0x99, 0x72, 0x62, 0xf6, 0x16, 0xbf, 0xe3, 0xa6, 0xcc, 0xd0, 0x32, 0xbb, 0xca,
	0x6d, 0xec, 0xea, 0x27, 0x03, 0x7d, 0xb4, 0xe4, 0xef, 0x70, 0xf1, 0x15, 0x00, 0x00, 0xff, 0xff,
	0xc5, 0xf9, 0xc6, 0x24, 0x42, 0x03, 0x00, 0x00,
}
